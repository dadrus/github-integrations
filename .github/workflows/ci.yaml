name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  redirect:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run: echo $PWD
      - run: ls -la
      - name: Update uri for redirecting to new version
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "x-release-version"
          replace: "foo"
          regex: false
          include: docs/**
      - run: cat ./docs/redirect/index.html
      - run: cat ./docs/static/data.json
      - name: Update versions.json
        run: |
          cat ./docs/static/data.json | jq '. + [{ "version": "foo", "path": "bar" }]' > ./docs/static/data.json
      - run: cat ./docs/static/data.json
        

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.4
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Test
        run: go test -v ./...

  build:
    runs-on: ubuntu-20.04
    needs:
      - test
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64, arm ]
        exclude:
          - goarch: arm
            goos: darwin
          - goarch: arm
            goos: windows
          - goarch: arm64
            goos: windows
    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.4
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Build
      run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-buildid= -w -s -X main.Version=${{ github.sha }}" -o ./build/
    - uses: actions/upload-artifact@v3
      if: success()
      with:
        name: build-result-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./build/*
        retention-days: 30


  # this job is here only for the verification purpose of the docker images build
  build-docker-images:
    runs-on: ubuntu-20.04
    needs:
     - test
    steps:
     - name: Checkout repository
       uses: actions/checkout@v3
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v2
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USER }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Build and push
       uses: docker/build-push-action@v3
       with:
         context: .
         file: ./docker/Dockerfile
         platforms: linux/amd64,linux/arm64,linux/arm
         push: false
         build-args: VERSION=${{ github.sha }}
         tags: ${{ github.repository }}:latest

  build-and-publish-docs:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
      - uses: ./.github/actions/build-and-publish-docs/