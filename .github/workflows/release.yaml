name: Release

on:
  push:
    branches:
      - master

jobs:
  prepare-release:
    runs-on: ubuntu-20.04
    outputs:
      release_created: ${{ steps.release_prepare.outputs.release_created }}
      tag_name: ${{ steps.release_prepare.outputs.tag_name }}
    steps:
      - name: Prepare Release
        id: release_prepare
        uses: google-github-actions/release-please-action@v3
        with:
          command: manifest
          token: ${{ secrets.GITHUB_TOKEN }}

  release-binaries:
    runs-on: ubuntu-20.04
    needs:
      - prepare-release
    # run this job only if the prepare-release job has created a release
    if: needs.prepare-release.outputs.release_created
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64 ]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.30
        with:
          release_tag: ${{ needs.prepare-release.outputs.tag_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goversion: 1.18.4
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          ldflags: "-buildid= -w -s -X main.Version=${{ needs.prepare-release.outputs.tag_name }}"
          build_flags: -trimpath
          extra_files: CHANGELOG.md README.md

  release-docker-mages:
    runs-on: ubuntu-20.04
    needs:
      - prepare-release
      - release-binaries
    # run this job only if the prepare-release job has created a release
    if: needs.prepare-release.outputs.release_created
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/github-script@v6
        id: repo_name
        with:
          script: return context.repo.repo
          result-encoding: string
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USER }}/${{ steps.repo_name.outputs.result }}
          labels: |
            org.opencontainers.image.version=${{ needs.prepare-release.outputs.tag_name }}
            org.opencontainers.image.description=Test description
            org.opencontainers.image.documentation=https://dadrus.github.io/heimdall/
            org.opencontainers.image.licenses=Apache-2.0
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          build-args: VERSION=${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ steps.repo_name.outputs.result }}:${{ needs.prepare-release.outputs.tag_name }},${{ secrets.DOCKERHUB_USER }}/${{ steps.repo_name.outputs.result }}:latest